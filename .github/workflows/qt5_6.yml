name: GitHub Qt5/6 Windows Builds

on:
  workflow_call:
    inputs:
      qt_version:
        type: string
        default: '5'
      event_name:
        type: string
        default: ''
      pull_request_number:
        type: string
        default: ''
      publish:
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      qt_version:
        type: choice
        options:
          - '5'
          - '6'
        default: '5'
      publish:
        type: boolean
        default: true

jobs:

  windows:
    name: ü™ü Windows x64 Qt${{ inputs.qt_version }}
    runs-on: windows-2022
    env:
      LIBJPEG_TURBO_VERSION: 3.0.1
    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: üîß Append Pull Request number to version (PR only)
        if: ${{ inputs.event_name == 'pull_request' }}
        shell: bash
        run: tr -d '\n' < .version > temp && mv temp .version && echo -n "+PR${{ inputs.pull_request_number }}" >> .version

      - name: üíæ Restore DirectX SDK (if available)
        uses: ethanjli/cached-download-action@v0.1.2
        with:
          url: https://download.microsoft.com/download/A/E/7/AE743F1F-632B-4809-87A9-AA1BB3458E31/DXSDK_Jun10.exe
          destination: .\installer\dxsdk-jun10.exe
          cache-key: dxsdk-jun10

      - name: üíæ Restore libjpeg-turbo (if available)
        uses: ethanjli/cached-download-action@v0.1.2
        with:
          url: https://sourceforge.net/projects/libjpeg-turbo/files/${{ env.LIBJPEG_TURBO_VERSION }}/libjpeg-turbo-${{ env.LIBJPEG_TURBO_VERSION }}-vc64.exe
          destination: .\installer\libjpeg-turbo.exe
          cache-key: libjpeg-turbo

      - name: üì• Extract DirectX SDK & libjpeg-turbo
        run: |
          7z x -aoa .\installer\dxsdk-jun10.exe DXSDK/Include DXSDK/Lib -oC:\
          echo "DXSDK_DIR=C:\DXSDK" | Out-File -FilePath $env:GITHUB_ENV -Append
          7z x -aoa .\installer\libjpeg-turbo.exe bin include lib -oC:\turbojpeg
          echo "TURBOJPEG_DIR=C:\turbojpeg" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: üì• Install Vulkan SDK
        if: ${{ inputs.qt_version == '6' }}
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          install_runtime: false
          cache: true
          stripdown: true

      - name: üì• Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ inputs.qt_version == '6' && '6.8' || '5.15.*' }}
          target: 'desktop'
          modules: ${{ inputs.qt_version == '6' && 'qtserialport qtwebsockets' || '' }}
          cache: true
          cache-key-prefix: 'cache-qt-windows'

      - name: üõ†Ô∏è Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: üíæ Download Pre-Build Dependencies
        id: dependencies
        uses: ./.github
        with:
          os: 'windows'
          architecture: 'x64'
          qt_version: ${{ inputs.qt_version }}
          build_type: ${{ inputs.event_name == 'pull_request' && 'debug' || 'release' }}

      - name: üë∑ Build ${{ env.HINT }}
        shell: cmd
        run: |
          cmake --preset windows-${{ env.BUILD_TYPE }} ${{ steps.dependencies.outputs.cmakeArgs }}
          cmake --build --preset windows-${{ env.BUILD_TYPE }}
        env:
          BUILD_TYPE: ${{ inputs.event_name == 'pull_request' && 'debug' || 'release' }}
          HINT: ${{ steps.dependencies.outputs.cmakeArgs != '' && '(with pre-built dependencies)' || '(full build)' }}


      
      - name: üì¶ Upload
        if: ${{ inputs.publish || inputs.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.qt_version == '6' && 'windows_x64_qt6' || 'windows_x64' }}
          path: build/bin/*.exe

