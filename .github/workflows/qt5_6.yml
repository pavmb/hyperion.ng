name: GitHub Qt5/6 Builds

on:
  # Reusable from push_pull.yml
  workflow_call:
    inputs:
      qt_version:
        type: string
        description: Build with this Qt version
        default: '5'
        required: false
      event_name:
        type: string
        description: The event name
        default: ''
        required: false
      pull_request_number:
        type: string
        description: The corresponding PR number
        default: ''
        required: false
      publish:
        type: boolean
        description: Package publishing
        default: false
        required: false

jobs:


######################
###### Windows #######
######################

  windows:
    name: ü™ü Windows x64
    runs-on: windows-2022
    env:
      LIBJPEG_TURBO_VERSION: 3.0.1
    steps:
      - name: ‚¨á Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: üîß Append Pull Request number to version (PR  only)
        if: ${{ inputs.event_name == 'pull_request' }}
        shell: bash
        run: tr -d '\n' < .version > temp && mv temp .version && echo -n "+PR${{ inputs.pull_request_number }}" >> .version

      - name: üíæ Restore DirectX SDK (if available)
        uses: ethanjli/cached-download-action@v0.1.2
        with:
          url: https://download.microsoft.com/download/A/E/7/AE743F1F-632B-4809-87A9-AA1BB3458E31/DXSDK_Jun10.exe
          destination: .\installer\dxsdk-jun10.exe
          cache-key: dxsdk-jun10

      - name: üíæ Restore libjpeg-turbo (if available)
        uses: ethanjli/cached-download-action@v0.1.2
        with:
          url: https://sourceforge.net/projects/libjpeg-turbo/files/${{ env.LIBJPEG_TURBO_VERSION }}/libjpeg-turbo-${{ env.LIBJPEG_TURBO_VERSION }}-vc64.exe
          destination: .\installer\libjpeg-turbo.exe
          cache-key: libjpeg-turbo

      - name: üì• Install DirectX SDK & libjpeg-turbo
        run: |
          cmd.exe /c start /wait .\installer\libjpeg-turbo.exe /S
          cmd.exe /c start /wait .\installer\dxsdk-jun10.exe /U /F

      - name: üì• Install Vulkan SDK
        if: ${{ inputs.qt_version == '6' }}
        uses: jakoch/install-vulkan-sdk-action@v1
        with:
          install_runtime: false
          cache: true
          stripdown: true

      - name: üì• Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ inputs.qt_version == '6' && '6.8' || '5.15.*' }}
          target: 'desktop'
          modules: ${{ inputs.qt_version == '6' && 'qtserialport qtwebsockets' || '' }}
          cache: 'true'
          cache-key-prefix: 'cache-qt-windows'

      - name: üõ†Ô∏è Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: üë∑ Build
        shell: cmd
        run: |
           cmake --preset windows-${{ env.BUILD_TYPE }}
           cmake --build --preset windows-${{ env.BUILD_TYPE }} --target package --parallel %NUMBER_OF_PROCESSORS%
        env:
          BUILD_TYPE: ${{ inputs.event_name == 'pull_request' && 'debug' || 'release' }}

      - name: üì¶ Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.NAME }}
          path: build/*.exe
        env:
          NAME: ${{ inputs.qt_version == '6' && 'windows_x64_qt6' || 'windows_x64' }}
